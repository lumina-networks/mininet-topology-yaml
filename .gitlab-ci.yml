# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: ubuntu:xenial

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - apt update
  - apt-get install -y git make python gcc help2man python-setuptools python-pip
  - cd ..
  - git clone git://github.com/mininet/mininet
  - cd mininet
  - git checkout -b 2.2.2
  - pwd
  - ls -lart
  - make install
  # - sudo util/install.sh
  # - python -V               # Print out python version for debugging
  # - python setup.py install
  # - cd ..
  # - ls -lart
  - cd /builds/tsen/mininet-topology-yaml
  # - pip install virtualenv
  # - virtualenv venv
  # - source venv/bin/activate
  - pip install -r requirements.txt
  - pip install -U .


test:
  script:
  - pip install pytest pexpect tox click
  - pytest
  # - python setup.py test
  # - pip install pep8  # you can also use tox
  # - pep8 --ignore=E501

run:
  script:
  - python setup.py bdist_wheel
  # an alternative approach is to install and run:
  - pip install dist/*
  # run the command here
  artifacts:
    paths:
    - dist/*.whl